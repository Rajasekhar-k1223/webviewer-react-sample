{"ast":null,"code":"var _jsxFileName = \"/home/ltritans/mail-domain-registry-front-end/webviewer-docx/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const viewer = useRef(null);\n\n  // if using a class, equivalent of componentDidMount \n  useEffect(() => {\n    // If you prefer to use the Iframe implementation, you can replace this line with: WebViewer.Iframe(...)\n    WebViewer.WebComponent({\n      path: '/webviewer/lib',\n      enableOfficeEditing: true\n      // initialDoc: '/files/PDFTRON_about.pdf',\n      // licenseKey: 'your_license_key',  // sign up to get a free trial key at https://dev.apryse.com\n    }, viewer.current).then(instance => {\n      // const { documentViewer, annotationManager, Annotations } = instance.Core;\n\n      // documentViewer.addEventListener('documentLoaded', () => {\n      //   const rectangleAnnot = new Annotations.RectangleAnnotation({\n      //     PageNumber: 1,\n      //     // values are in page coordinates with (0, 0) in the top left\n      //     X: 100,\n      //     Y: 150,\n      //     Width: 200,\n      //     Height: 50,\n      //     Author: annotationManager.getCurrentUser()\n      //   });\n\n      //   annotationManager.addAnnotation(rectangleAnnot);\n      //   // need to draw the annotation otherwise it won't show up until the page is refreshed\n      //   annotationManager.redrawAnnotation(rectangleAnnot);\n      // });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webviewer\",\n      ref: viewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y8sMazzoTWk8lnu56NnIw9A+doY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","WebViewer","jsxDEV","_jsxDEV","App","_s","viewer","WebComponent","path","enableOfficeEditing","current","then","instance","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ltritans/mail-domain-registry-front-end/webviewer-docx/src/App.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nconst App = () => {\n  const viewer = useRef(null);\n\n  // if using a class, equivalent of componentDidMount \n  useEffect(() => {\n    // If you prefer to use the Iframe implementation, you can replace this line with: WebViewer.Iframe(...)\n    WebViewer.WebComponent(\n      {\n        path: '/webviewer/lib',\n        enableOfficeEditing: true,\n        // initialDoc: '/files/PDFTRON_about.pdf',\n        // licenseKey: 'your_license_key',  // sign up to get a free trial key at https://dev.apryse.com\n      },\n      viewer.current,\n    ).then((instance) => {\n      // const { documentViewer, annotationManager, Annotations } = instance.Core;\n\n      // documentViewer.addEventListener('documentLoaded', () => {\n      //   const rectangleAnnot = new Annotations.RectangleAnnotation({\n      //     PageNumber: 1,\n      //     // values are in page coordinates with (0, 0) in the top left\n      //     X: 100,\n      //     Y: 150,\n      //     Width: 200,\n      //     Height: 50,\n      //     Author: annotationManager.getCurrentUser()\n      //   });\n\n      //   annotationManager.addAnnotation(rectangleAnnot);\n      //   // need to draw the annotation otherwise it won't show up until the page is refreshed\n      //   annotationManager.redrawAnnotation(rectangleAnnot);\n      // });\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"webviewer\" ref={viewer}></div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACAC,SAAS,CAAC,MAAM;IACd;IACAC,SAAS,CAACM,YAAY,CACpB;MACEC,IAAI,EAAE,gBAAgB;MACtBC,mBAAmB,EAAE;MACrB;MACA;IACF,CAAC,EACDH,MAAM,CAACI,OACT,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACnB;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;IAAA,CACD,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,eAElBX,OAAA;MAAKU,SAAS,EAAC,WAAW;MAACE,GAAG,EAAET;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACd,EAAA,CAzCID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}